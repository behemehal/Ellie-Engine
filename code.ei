v numFun : fn(i8, i32)::i8 = @(firstPar: i8, secondPar: i32) > i8 => 1;

v numFunExtended : fn(i8, i32)::i8 = @(firstPar: i8, secondPar: i32) > i8 : {
    return 1;
};

v num : i8 = 1;

v charVar : char = 't';

v arrayOfNumbers : array(i8, 8) = [1, 2, 3, 4, 5, 6, 7 , 8];

v stringVar = "test";

class test {

    co test(parameter: i8) { //Construct module
        self.firstPar = 3;
        self.secondPar = 4;
        self.thirdPar = 5;
    }


    pub v firstPar : i8;
    pub v secondPar : i16;
    pri v thirdPar : i64;

    set fourthPar = @(parameter: i8) => firstPar = parameter + 3;
    get fourthPar = @() > i8 => firstPar + 3;
}
